
 
Minimum Spanning Trees:    http://www.cse.ust.hk/faculty/golin/COMP271Sp03/Notes/MyL10.pdf
                           http://www.columbia.edu/~cs2035/courses/ieor6614.S11/mst.pdf
                           http://www.cs.princeton.edu/~rs/AlgsDS07/14MST.pdf
                           http://www.csie.ntu.edu.tw/~kmchao/tree07spr/mst.pdf
All pairs shortest path:   http://www.cse.ust.hk/faculty/golin/COMP271Sp03/Notes/MyL15.pdf

Shortest Path              http://www.columbia.edu/~cs2035/courses/ieor6614.S11/sp.pdf
                           http://www.cs.rit.edu/~rlc/Courses/Algorithms/ClassNotes/ShortestPath.pdf
                           ---- Good discussion on bellman ford vs dijkstra for today


General                     http://www.cs.princeton.edu/~rs/AlgsDS07/

Programming Competition Lectures
                                    https://activities.tjhsst.edu/sct/lectures.php
Coursera Lectures          https://class.coursera.org/algo2-002/lecture
UCDAVIS Lectures           http://web.cs.ucdavis.edu/~gusfield/cs122f10/videolist.html
                                    -good explanation of dynamic programming for shortest path.
Princeton lectures         http://algs4.cs.princeton.edu/lectures/
                           https://www.cs.princeton.edu/~rs/AlgsDS07/15ShortestPaths.pdf
MIT                        http://courses.csail.mit.edu/6.006/spring11/notes.shtml
Boston                     http://www.cs.bu.edu/~best/courses/cs109/
                                - eulerean circuit etc.  
Steve Skienna              http://www3.cs.stonybrook.edu/~algorith/
RIT Lectures seem good     http://www.cs.rit.edu/~rlc/Courses/Algorithms/ClassNotes/

Simple Code Examples       http://www.cs.rit.edu/~rlc/Courses/Algorithms/CodeExamples/
Virginia                   https://www.cs.virginia.edu/~shelat/4102/
                              - good notes about dynamic programming
Stanford Lectures          http://web.stanford.edu/class/archive/cs/cs161/cs161.1138/

GIT Hub Problems           https://github.com/pedrovgs/Algorithms