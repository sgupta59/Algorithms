General
	http://en.literateprograms.org/Category:Programming_language:C
	https://www.ics.uci.edu/~eppstein/teach.html
	http://web.cs.ucdavis.edu/~gusfield/cs122f10/videolist.html         video
	https://courses.engr.illinois.edu/cs498374/fa2014/lectures.html     video
	https://courses.engr.illinois.edu/cs498dl1/sp2015/standards.html
	https://algorithmcafe.wordpress.com/ 
Books

	https://github.com/vhf/free-programming-books
BackTracking
	Knights Tour Optimized:
		http://codereview.stackexchange.com/questions/66888/making-backtracking-knights-tours-solution-more-efficient
		http://blog.tiaan.com/link/2010/06/01/knights-tour-warnsdorff-csharp-cplusplus
	Simple
		http://www.dreamincode.net/forums/topic/258287-a-look-at-backtracking/
		
8 Queen Problem
	Description: http://en.literateprograms.org/index.php?title=Special:DownloadCode/Eight_queens_puzzle_(C)&oldid=15660
	Source     : http://en.literateprograms.org/index.php?title=Special:DownloadCode/Eight_queens_puzzle_(C)&oldid=15660

Recursion/Subset Sum
	https://algoriddles.wordpress.com/category/recursion-concepts/
	
Dynamic Programming
	https://algoriddles.wordpress.com/category/dynamic-programming/
	
Bit Manipulation
	https://algoriddles.wordpress.com/category/bit-manipulation/
	
Subset Sum
	https://codeaccepted.wordpress.com/tag/subset-sum-problem/
		Has 3 different implementations, bitmasking, dynamic programming and backtracking
	http://www.geeksforgeeks.org/backttracking-set-4-subset-sum/
		Normal implemetation, code fixed.
		
Books:
		http://www.scientificlib.com/en/Books/DesignAnalysisOflgorithmsVVMuniswamy.html
		
JVM/Garbage Collection
        http://blog.ragozin.info/2013/11/hotspot-jvm-garbage-collection-options.html

General Interview Links
	http://codingrecipies.blogspot.com/2013/09/max-spacing-for-k-order-cluster.html
    5. https://algorithmcafe.wordpress.com/
    0. https://sites.google.com/site/spaceofjameschen/home [current]
    1. http://tech-queries.blogspot.com/2011/01/nuts-and-bolts-algorithm.html
    2. http://exceptional-code.blogspot.com/2012/02/solving-boggle-game-recursion-prefix.html
    3. https://github.com/andreis/interview
    4. [Hacking Google Interview]    https://courses.csail.mit.edu/iap/interview/materials.php
GRAPH ALGORITHMS
    1. http://www.disp.uniroma2.it/users/italiano/shortestpaths.pdf
                    https://algorithmcafe.wordpress.com/
Minimum Spanning Trees:    http://www.cse.ust.hk/faculty/golin/COMP271Sp03/Notes/MyL10.pdf
                           http://www.columbia.edu/~cs2035/courses/ieor6614.S11/mst.pdf
                           http://www.cs.princeton.edu/~rs/AlgsDS07/14MST.pdf
                           http://www.csie.ntu.edu.tw/~kmchao/tree07spr/mst.pdf
All pairs shortest path:   http://www.cse.ust.hk/faculty/golin/COMP271Sp03/Notes/MyL15.pdf

Shortest Path              http://www.columbia.edu/~cs2035/courses/ieor6614.S11/sp.pdf
                           http://www.cs.rit.edu/~rlc/Courses/Algorithms/ClassNotes/ShortestPath.pdf
                           ---- Good discussion on bellman ford vs dijkstra for today


General                     http://www.cs.princeton.edu/~rs/AlgsDS07/

Programming Competition Lectures
                                    https://activities.tjhsst.edu/sct/lectures.php
Coursera Lectures          https://class.coursera.org/algo2-002/lecture
UCDAVIS Lectures           http://web.cs.ucdavis.edu/~gusfield/cs122f10/videolist.html
                                    -good explanation of dynamic programming for shortest path.
Princeton lectures         http://algs4.cs.princeton.edu/lectures/
                           https://www.cs.princeton.edu/~rs/AlgsDS07/15ShortestPaths.pdf
MIT                        http://courses.csail.mit.edu/6.006/spring11/notes.shtml
Boston                     http://www.cs.bu.edu/~best/courses/cs109/
                                - eulerean circuit etc.  
Steve Skienna              http://www3.cs.stonybrook.edu/~algorith/
RIT Lectures seem good     http://www.cs.rit.edu/~rlc/Courses/Algorithms/ClassNotes/

Simple Code Examples       http://www.cs.rit.edu/~rlc/Courses/Algorithms/CodeExamples/
Virginia                   https://www.cs.virginia.edu/~shelat/4102/
                              - good notes about dynamic programming
Stanford Lectures          http://web.stanford.edu/class/archive/cs/cs161/cs161.1138/

GIT Hub Problems           https://github.com/pedrovgs/Algorithms
                           https://algorithmcafe.wordpress.com/

MYSQL
                            http://www.databasejournal.com/features/mysql/article.php/3469351/The-HAVING-and-GROUP-BY-SQL-clauses.htm

 
